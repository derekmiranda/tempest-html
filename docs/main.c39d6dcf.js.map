{"version":3,"sources":["lib/matrix.ts","CONSTS.ts","objects/Transform.ts","objects/BaseGameObject.ts","lib/shapes.ts","lib/utils.ts","objects/Bullet.ts","objects/Player.ts","Game.ts","lib/Queue.ts","objects/Enemy.ts","objects/RedEnemy.ts","objects/EnemySpawner.ts","objects/Level.ts","objects/Circle.ts","objects/Square.ts","main.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.c39d6dcf.js","sourceRoot":"../src","sourcesContent":["// borrowed from https://webglfundamentals.org/webgl/lessons/webgl-2d-matrices.html\n\n// TODO: convert to TS/ES6 module\nexport var matrix = {\n  projection: function (width, height) {\n    // Note: This matrix flips the Y axis so that 0 is at the top.\n    return [2 / width, 0, 0, 0, -2 / height, 0, -1, 1, 1];\n  },\n\n  identity: function () {\n    return [1, 0, 0, 0, 1, 0, 0, 0, 1];\n  },\n\n  translation: function (tx, ty) {\n    return [1, 0, 0, 0, 1, 0, tx, ty, 1];\n  },\n\n  rotation: function (angleInRadians) {\n    var c = Math.cos(angleInRadians);\n    var s = Math.sin(angleInRadians);\n    return [c, -s, 0, s, c, 0, 0, 0, 1];\n  },\n\n  scaling: function (sx, sy) {\n    return [sx, 0, 0, 0, sy, 0, 0, 0, 1];\n  },\n\n  multiply: function (a, b) {\n    var a00 = a[0 * 3 + 0];\n    var a01 = a[0 * 3 + 1];\n    var a02 = a[0 * 3 + 2];\n    var a10 = a[1 * 3 + 0];\n    var a11 = a[1 * 3 + 1];\n    var a12 = a[1 * 3 + 2];\n    var a20 = a[2 * 3 + 0];\n    var a21 = a[2 * 3 + 1];\n    var a22 = a[2 * 3 + 2];\n    var b00 = b[0 * 3 + 0];\n    var b01 = b[0 * 3 + 1];\n    var b02 = b[0 * 3 + 2];\n    var b10 = b[1 * 3 + 0];\n    var b11 = b[1 * 3 + 1];\n    var b12 = b[1 * 3 + 2];\n    var b20 = b[2 * 3 + 0];\n    var b21 = b[2 * 3 + 1];\n    var b22 = b[2 * 3 + 2];\n\n    a[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    a[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    a[2] = b00 * a02 + b01 * a12 + b02 * a22;\n    a[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    a[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    a[5] = b10 * a02 + b11 * a12 + b12 * a22;\n    a[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    a[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    a[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  },\n\n  cloneMultiply: function (a, b) {\n    var a00 = a[0 * 3 + 0];\n    var a01 = a[0 * 3 + 1];\n    var a02 = a[0 * 3 + 2];\n    var a10 = a[1 * 3 + 0];\n    var a11 = a[1 * 3 + 1];\n    var a12 = a[1 * 3 + 2];\n    var a20 = a[2 * 3 + 0];\n    var a21 = a[2 * 3 + 1];\n    var a22 = a[2 * 3 + 2];\n    var b00 = b[0 * 3 + 0];\n    var b01 = b[0 * 3 + 1];\n    var b02 = b[0 * 3 + 2];\n    var b10 = b[1 * 3 + 0];\n    var b11 = b[1 * 3 + 1];\n    var b12 = b[1 * 3 + 2];\n    var b20 = b[2 * 3 + 0];\n    var b21 = b[2 * 3 + 1];\n    var b22 = b[2 * 3 + 2];\n    return [\n      b00 * a00 + b01 * a10 + b02 * a20,\n      b00 * a01 + b01 * a11 + b02 * a21,\n      b00 * a02 + b01 * a12 + b02 * a22,\n      b10 * a00 + b11 * a10 + b12 * a20,\n      b10 * a01 + b11 * a11 + b12 * a21,\n      b10 * a02 + b11 * a12 + b12 * a22,\n      b20 * a00 + b21 * a10 + b22 * a20,\n      b20 * a01 + b21 * a11 + b22 * a21,\n      b20 * a02 + b21 * a12 + b22 * a22,\n    ];\n  },\n\n  translate: function (m, tx, ty) {\n    return matrix.multiply(m, matrix.translation(tx, ty));\n  },\n\n  rotate: function (m, angleInRadians) {\n    return matrix.multiply(m, matrix.rotation(angleInRadians));\n  },\n\n  scale: function (m, sx, sy) {\n    return matrix.multiply(m, matrix.scaling(sx, sy));\n  },\n\n  transformPoint: function (m, x, y) {\n    const newX = m[0] * x + m[3] * y + m[6];\n    const newY = m[1] * x + m[4] * y + m[7];\n    return {\n      x: newX,\n      y: newY,\n    };\n  },\n\n  deriveAngle: function (m) {\n    // m[1][0] should be sin(angle)\n    return Math.asin(m[3]);\n  },\n};\n","import { Point } from \"./types\";\n\n// 60 fps\nexport const AVG_FRAME_TIME = 1 / 60;\n\n// define geometry as relative to unit square\nexport const LEVEL_CENTER: Point = {\n  x: 0,\n  y: 0.1,\n};\n\n// scale to apply on far level shape\nexport const FAR_SCALE = 0.1;\n\n// padding b/w player and line on level w.r.t. level-space\nexport const PLAYER_TO_LEVEL_DIST = 0;\nexport const PLAYER_TO_LEVEL_SIZE = 0.2;\nexport const ENEMY_TO_LEVEL_SIZE = 0.2;\n\n// z-value tolerance for collisions\nexport const COLLISION_TOLERANCE = 0.03;\n\nexport const COLORS = {\n  BG: \"black\",\n  PLAYER: \"yellow\",\n  BULLET: \"pink\",\n  RED: \"tomato\",\n  LINE: \"blue\",\n};\n\nexport const RED_ENEMY_SPEED = 0.00015;\nexport const BULLET_SPEED = 0.003;\nexport const BULLET_TOLERANCE = 1500 * BULLET_SPEED * AVG_FRAME_TIME;\n\nexport const MAX_ID = Number.MAX_SAFE_INTEGER;\n","import { FAR_SCALE } from \"../CONSTS\";\nimport { matrix } from \"../lib/matrix\";\nimport { Matrix, TransformPropsInterface } from \"../types\";\n\nexport class Transform {\n  private matrix: Matrix = matrix.identity();\n\n  // transform props\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n  h: number;\n  angle: number = 0;\n\n  constructor({\n    x = 0,\n    y = 0,\n    z = 0,\n    w = 1,\n    h = 1,\n    angle = 0,\n  }: TransformPropsInterface = {}) {\n    this.setTransformWithProps({ x, y, z, w, h, angle });\n  }\n\n  getMatrix(): Matrix {\n    return this.matrix;\n  }\n\n  setMatrix(m: Matrix, shouldUpdateProps: boolean = false) {\n    this.matrix = m;\n    if (shouldUpdateProps) {\n      this.updateTransformProps();\n    }\n  }\n\n  setTransformWithProps({\n    x,\n    y,\n    w,\n    z,\n    h,\n    angle,\n  }: TransformPropsInterface): void {\n    const newMat = matrix.identity();\n\n    // apply translation\n    if (x !== undefined) this.x = x;\n    if (y !== undefined) this.y = y;\n    matrix.translate(newMat, this.x, this.y);\n\n    // update z\n    if (z !== undefined) this.z = z;\n\n    // apply rotation\n    if (angle !== undefined) this.angle = angle;\n    if (this.angle >= Math.PI * 2) {\n      this.angle = (this.angle / (Math.PI * 2)) % 1;\n    }\n    matrix.rotate(newMat, this.angle);\n\n    // apply scale with z-scaling\n    const zScale = 1 - (1 - FAR_SCALE) * this.z;\n    if (w !== undefined) this.w = w;\n    if (h !== undefined) this.h = h;\n    matrix.scale(newMat, this.w * zScale, this.h * zScale);\n\n    this.matrix = newMat;\n  }\n\n  getTransformProps() {\n    return {\n      x: this.x,\n      y: this.y,\n      z: this.z,\n      w: this.w,\n      h: this.h,\n      angle: this.angle,\n    };\n  }\n\n  updateWithProps({ x, y, w, z, h, angle }: TransformPropsInterface): void {\n    // apply translation\n    if (x || y) {\n      // cache xy\n      if (x !== undefined) this.x += x;\n      if (y !== undefined) this.y += y;\n\n      matrix.translate(this.matrix, this.x, this.y);\n    }\n\n    // apply rotation\n    if (angle !== undefined) {\n      // cache angle\n      this.angle += angle;\n      if (this.angle >= Math.PI * 2) {\n        this.angle = (this.angle / (Math.PI * 2)) % 1;\n      }\n      matrix.rotate(this.matrix, angle);\n    }\n\n    // apply z\n    if (z !== undefined) this.z += z;\n\n    // apply scale and z\n    if (w || h) {\n      if (w !== undefined) this.w *= w;\n      if (h !== undefined) this.h *= h;\n\n      const zScale = 1 - (1 - FAR_SCALE) * this.z;\n      matrix.scale(this.matrix, this.w * zScale, this.h * zScale);\n    }\n  }\n\n  updateWithMatrix(m: Matrix, shouldUpdateProps: boolean = false) {\n    matrix.multiply(this.matrix, m);\n\n    if (shouldUpdateProps) {\n      this.updateTransformProps();\n    }\n  }\n\n  // calculates transform properties based on current matrix\n  updateTransformProps() {\n    this.x = this.matrix[6];\n    this.y = this.matrix[7];\n    this.angle = matrix.deriveAngle(this.matrix);\n\n    const cosAngle = Math.cos(this.angle);\n    this.w = this.matrix[0] / cosAngle;\n    this.h = this.matrix[4] / cosAngle;\n  }\n}\n","import { Game } from \"../Game\";\nimport { matrix } from \"../lib/matrix\";\nimport {\n  GameObjectPropsInterface,\n  Point,\n  TransformPropsInterface,\n} from \"../types\";\nimport { Transform } from \"./Transform\";\n\nexport class BaseGameObject {\n  id: number;\n  ctx: CanvasRenderingContext2D;\n  game: Game;\n  parent: BaseGameObject;\n  children: BaseGameObject[] = [];\n  transform: Transform;\n  globalTransform: Transform;\n  points: Point[] = [];\n  layer: number;\n  rendered: boolean = false;\n\n  constructor(props: GameObjectPropsInterface) {\n    Object.assign(this, props);\n    this.transform = new Transform(props);\n    this.updateGlobalTransform();\n  }\n\n  // sets this.points\n  initPoints() {\n    this.points = [];\n  }\n\n  // sets event listeners\n  setListeners() {}\n\n  // remove event listeners\n  removeListeners() {}\n\n  // render and update\n  // write render and update function on classes extended BaseGameObject\n  // _render and _update are used internally by game loop\n  _render() {\n    this.render();\n  }\n  render() {}\n\n  _update(timeDelta: number, time: number) {\n    if (timeDelta < 0) return;\n    this.update(timeDelta, time);\n  }\n  update(timeDelta: number, time: number) {}\n\n  setParent(parent: BaseGameObject) {\n    this.parent = parent;\n    this.updateGlobalTransform();\n  }\n\n  addChildren(children: BaseGameObject[] | BaseGameObject) {\n    if (!Array.isArray(children)) children = [children];\n    for (let child of children) {\n      child.setParent(this);\n      this.children.push(child);\n      if (this.rendered) {\n        this.game.addObject(child);\n      }\n    }\n  }\n\n  removeChild(child: BaseGameObject) {\n    const childIdx = this.children.indexOf(child);\n    if (childIdx > 0) this.children.splice(childIdx, 1);\n  }\n\n  // base destroy method\n  _destroy() {\n    this.rendered = false;\n    this.game.removeObject(this);\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n  }\n  destroy() {\n    this._destroy();\n  }\n\n  updateTransformWithProps(props: TransformPropsInterface) {\n    this.transform.updateWithProps(props);\n    this.updateGlobalTransform();\n  }\n\n  setTransformWithProps(props: TransformPropsInterface) {\n    this.transform.setTransformWithProps(props);\n    this.updateGlobalTransform();\n  }\n\n  // updates transformation matrix relative to whole canvas\n  // and children's as well\n  updateGlobalTransform() {\n    this.globalTransform = new Transform();\n    this.globalTransform.updateWithProps(this.transform.getTransformProps());\n\n    if (this.parent) {\n      // TODO: update translation w/ z\n      // update global transform w/ parent's global transform\n      const parentGlobalMat = this.parent.globalTransform.getMatrix();\n      const parentGlobalProps = this.parent.globalTransform.getTransformProps();\n      this.globalTransform.updateWithProps(parentGlobalProps);\n\n      const { x, y, z } = this.transform.getTransformProps();\n      const newTranslateX =\n        parentGlobalMat[0] * x + parentGlobalMat[3] * y + parentGlobalProps.x;\n      const newTranslateY =\n        parentGlobalMat[1] * x + parentGlobalMat[4] * y + parentGlobalProps.y;\n      this.globalTransform.setTransformWithProps({\n        x: newTranslateX,\n        y: newTranslateY,\n        z,\n      });\n    }\n\n    // and children's matrices\n    for (let child of this.children) child.updateGlobalTransform();\n  }\n\n  normalizePoints(relX: number, relY: number): Point {\n    return {\n      x: this.ctx.canvas.width * (relX + 0.5),\n      y: this.ctx.canvas.height * (relY + 0.5),\n    };\n  }\n\n  localLineTo(localX: number, localY: number) {\n    const resolved: Point = matrix.transformPoint(\n      this.globalTransform.getMatrix(),\n      localX,\n      localY\n    );\n    const normalized: Point = this.normalizePoints(resolved.x, resolved.y);\n    this.ctx.lineTo(normalized.x, normalized.y);\n  }\n\n  localMoveTo(localX: number, localY: number) {\n    const resolved: Point = matrix.transformPoint(\n      this.globalTransform.getMatrix(),\n      localX,\n      localY\n    );\n    const normalized: Point = this.normalizePoints(resolved.x, resolved.y);\n    this.ctx.moveTo(normalized.x, normalized.y);\n  }\n\n  setLayer(layer) {\n    this.layer = layer;\n  }\n\n  setRenderedState(state: boolean) {\n    this.rendered = state;\n  }\n}\n","import { Point } from \"../types\";\n\nconst _circleMemo = {};\nexport function circle(segments) {\n  if (!_circleMemo[segments]) {\n    const segmentAngle: number = (2 * Math.PI) / segments;\n    const pts = [];\n    for (let i = 0; i < segments; i++) {\n      const angle = segmentAngle * i;\n      pts.push({\n        x: 0.5 * Math.cos(angle),\n        y: 0.5 * Math.sin(angle),\n      });\n    }\n    _circleMemo[segments] = pts;\n  }\n  return _circleMemo[segments]; //.slice()\n}\n\nconst _squareMemo = {};\nexport function square(segments) {\n  if (!_squareMemo[segments]) {\n    const pts = [];\n    // draw points from top-right to bottom-right to bottom-left to top-left and back\n    const segQtrNum = Math.floor(segments / 4);\n    for (let i = 0; i < segments; i++) {\n      switch (Math.floor((4 * i) / segments)) {\n        // from top-right to bottom-right\n        case 0:\n          pts.push({\n            x: 0.5,\n            y: -0.5 + i / segQtrNum,\n          });\n          break;\n        // from bottom-right to bottom-left\n        case 1:\n          pts.push({\n            x: 0.5 - (i - segQtrNum) / segQtrNum,\n            y: 0.5,\n          });\n          break;\n        // from bottom-left to top-left\n        case 2:\n          pts.push({\n            x: -0.5,\n            y: 0.5 - (i - 2 * segQtrNum) / segQtrNum,\n          });\n          break;\n        // from top-left to top-right\n        case 3:\n          pts.push({\n            x: -0.5 + (i - 3 * segQtrNum) / segQtrNum,\n            y: -0.5,\n          });\n      }\n    }\n    _squareMemo[segments] = pts;\n  }\n  return _squareMemo[segments];\n}\n\nconst DOT_SIZE = 0.005;\nexport function farDot(center: Point): Point[] {\n  const diamondPts = circle(4);\n  return diamondPts.map((pt) => {\n    return {\n      x: DOT_SIZE * pt.x + center.x,\n      y: DOT_SIZE * pt.y + center.y,\n    };\n  });\n}\n","import { TransformPropsInterface, Point, VoidFunction } from \"../types\";\n\n// math utils\nexport function findPointBetweenPoints(\n  start: Point,\n  end: Point,\n  k: number\n): Point {\n  const dx = end.x - start.x;\n  const dy = end.y - start.y;\n\n  return {\n    x: start.x + dx * k,\n    y: start.y + dy * k,\n  };\n}\n\nexport function calcMidpoints(points: Point[], loops: boolean): Point[] {\n  const midpoints = [];\n  for (let i = 0; i < points.length - 1; i++) {\n    midpoints.push(findPointBetweenPoints(points[i], points[i + 1], 0.5));\n  }\n\n  if (loops)\n    midpoints.push(\n      findPointBetweenPoints(points[points.length - 1], points[0], 0.5)\n    );\n\n  return midpoints;\n}\n\nexport function rotate(x, y, angle): Point {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n\n  let newX = x * cos - y * sin;\n  let newY = x * sin + y * cos;\n\n  return {\n    x: newX,\n    y: newY,\n  };\n}\n\nexport function calcAngle(x, y): number {\n  let angle = Math.atan(y / x);\n  // adjust angles in Quadrant III and IV\n  if (x < 0) {\n    angle += Math.PI;\n  }\n  return angle;\n}\n\n// time utils\nexport function throttle(fn: VoidFunction, time: number): VoidFunction {\n  let lastTime: number;\n  return function (...args) {\n    if (!lastTime || Date.now() > lastTime + time) {\n      fn(...args);\n      lastTime = Date.now();\n    }\n  };\n}\n\nexport function debounce(fn: VoidFunction, wait: number): VoidFunction {\n  let timeout = null;\n  return function (...args) {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(function () {\n      fn(...args);\n      timeout = null;\n    }, wait);\n  };\n}\n\n// time in terms of ms\nexport function sleep(time: number): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, time);\n  });\n}\n","import { BaseGameObject } from \"./BaseGameObject\";\nimport {\n  GameObjectInterface,\n  GameObjectPropsInterface,\n  Point,\n  Traveler,\n} from \"../types\";\nimport { COLORS, BULLET_SPEED, COLLISION_TOLERANCE } from \"../CONSTS\";\nimport { circle } from \"../lib/shapes\";\nimport { findPointBetweenPoints } from \"../lib/utils\";\nimport { Level } from \"./Level\";\nimport { Enemy } from \"./Enemy\";\n\ninterface BulletPropsInterface extends GameObjectPropsInterface, Traveler {\n  laneIdx: number;\n  level: Level;\n}\n\nexport class Bullet extends BaseGameObject implements GameObjectInterface {\n  speed: number = BULLET_SPEED;\n  color: string = COLORS.PLAYER;\n  laneIdx: number;\n  level: Level;\n  points: Point[];\n  to: Point;\n  from: Point;\n\n  constructor(props: BulletPropsInterface) {\n    super(props);\n    this.initPoints();\n  }\n\n  initPoints() {\n    this.points = circle(4);\n  }\n\n  update(timeDelta: number) {\n    const { z } = this.transform.getTransformProps();\n    const newZ = z + timeDelta * BULLET_SPEED;\n\n    const newPoint = findPointBetweenPoints(this.to, this.from, newZ);\n    this.setTransformWithProps({ z: newZ, ...newPoint });\n  }\n\n  render() {\n    this.ctx.fillStyle = this.color;\n    this.ctx.beginPath();\n    this.points.forEach(({ x, y }, i) => {\n      i === 0 ? this.localMoveTo(x, y) : this.localLineTo(x, y);\n    });\n    this.ctx.closePath();\n    this.ctx.fill();\n  }\n}\n","import { BaseGameObject } from \"./BaseGameObject\";\nimport { GameObjectInterface, GameObjectPropsInterface } from \"../types\";\nimport { COLORS } from \"../CONSTS\";\nimport { Bullet } from \"./Bullet\";\nimport { Level } from \"./Level\";\nimport { throttle } from \"../lib/utils\";\n\ninterface PlayerPropsInterface extends GameObjectPropsInterface {\n  color?: string;\n}\n\nexport class Player extends BaseGameObject implements GameObjectInterface {\n  level: Level;\n  color: string;\n  fireBullet: Function;\n  isFiring: boolean;\n\n  constructor(props: PlayerPropsInterface) {\n    super(props);\n    if (!this.color) {\n      this.color = COLORS.PLAYER;\n    }\n    this.keydown = this.keydown.bind(this);\n    this.keyup = this.keyup.bind(this);\n    this.enableFiring = this.enableFiring.bind(this);\n    this.disableFiring = this.disableFiring.bind(this);\n    this.fireBullet = throttle(this._fireBullet.bind(this), 150);\n  }\n\n  _fireBullet() {\n    const bulletTf = this.level.getBulletPath();\n    const laneIdx = this.level.getPlayerSpotIdx();\n    const bullet = new Bullet({\n      game: this.game,\n      ctx: this.ctx,\n      level: this.level,\n      laneIdx,\n      parent: this.parent,\n      ...bulletTf.to,\n      ...bulletTf,\n      w: 0.05,\n      h: 0.05,\n    });\n    this.level.addBullet(bullet, laneIdx);\n    this.game.addObject(bullet, this.layer);\n  }\n\n  keydown(e) {\n    if (e.code === \"Space\") {\n      this.enableFiring();\n    }\n  }\n\n  keyup(e) {\n    if (e.code === \"Space\") {\n      this.disableFiring();\n    }\n  }\n\n  enableFiring() {\n    this.isFiring = true;\n  }\n\n  disableFiring() {\n    this.isFiring = false;\n  }\n\n  setListeners() {\n    window.addEventListener(\"keydown\", this.keydown, true);\n    window.addEventListener(\"keyup\", this.keyup, true);\n    this.ctx.canvas.addEventListener(\"mousedown\", this.enableFiring, true);\n    this.ctx.canvas.addEventListener(\"mouseup\", this.disableFiring, true);\n  }\n\n  removeListeners() {\n    window.removeEventListener(\"keydown\", this.keydown, true);\n    window.removeEventListener(\"keyup\", this.keyup, true);\n    this.ctx.canvas.removeEventListener(\"mousedown\", this.enableFiring, true);\n    this.ctx.canvas.removeEventListener(\"mouseup\", this.disableFiring, true);\n  }\n\n  update() {\n    if (this.isFiring) this.fireBullet();\n  }\n\n  render() {\n    this.ctx.strokeStyle = this.color;\n    this.ctx.beginPath();\n    this.localMoveTo(-0.25, -0.25);\n    this.localLineTo(-0.5, 0);\n    this.localLineTo(0, 0.3);\n    this.localLineTo(0.5, 0);\n    this.localLineTo(0.25, -0.25);\n    this.localLineTo(0.4, 0);\n    this.localLineTo(0, 0.1);\n    this.localLineTo(-0.4, 0);\n    this.ctx.closePath();\n    this.ctx.stroke();\n  }\n\n  setLevel(level) {\n    this.level = level;\n  }\n}\n","import { GameObjectPropsInterface, VoidFunction } from \"./types\";\nimport { BaseGameObject } from \"./objects/BaseGameObject\";\nimport { Level } from \"./objects/Level\";\nimport { Player } from \"./objects/Player\";\nimport { debounce } from \"./lib/utils\";\nimport { COLORS, MAX_ID } from \"./CONSTS\";\nimport { Enemy } from \"./objects/Enemy\";\nimport { RedEnemy } from \"./objects/RedEnemy\";\nimport { EnemySpawner } from \"./objects/EnemySpawner\";\n\ninterface State {\n  sceneType: SceneType;\n  levelState?: LevelState;\n  levelIdx?: number;\n}\n\ninterface Layer {\n  [id: string]: BaseGameObject;\n}\n\nclass LayerCollection {\n  private layers: Layer[] = [];\n  // id mapped to serialized string: \"layerIdx, objIdxInLayer\"\n  private objIdMap = {};\n\n  addObject(obj: BaseGameObject, layerIdx: number = 0) {\n    // object already added\n    if (this.objIdMap[obj.id]) return;\n\n    if (this.layers[layerIdx]) {\n      this.layers[layerIdx][obj.id] = obj;\n    } else {\n      this.layers[layerIdx] = { [obj.id]: obj };\n    }\n    this.objIdMap[obj.id] = layerIdx;\n  }\n\n  removeObject(obj: BaseGameObject) {\n    if (this.objIdMap[obj.id] !== undefined) {\n      const layerIdx = this.objIdMap[obj.id];\n      delete this.objIdMap[obj.id];\n      delete this.layers[layerIdx][obj.id];\n    }\n  }\n\n  // apply function to all objects in layer collection, in order\n  applyFn(fn: Function, filterFn?: Function) {\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n      Object.values(layer).forEach((obj) => {\n        if (!filterFn || filterFn(obj)) fn(obj);\n      });\n    }\n  }\n}\n\ninterface LevelState {\n  idx: number;\n  // TODO: enemy state\n}\n\ninterface GamePropsInterface {\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  levels: typeof Level[];\n  state?: State;\n}\n\n// scene types\nexport enum SceneType {\n  LEVEL = \"LEVEL\",\n  TITLE = \"TITLE\",\n  WIN = \"WIN\",\n  GAME_OVER = \"GAME_OVER\",\n}\n\nexport class Game {\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  levels: typeof Level[];\n  state: State;\n  player: Player;\n\n  private layerCollection: LayerCollection;\n  private canvasRect: DOMRect;\n  private running = true;\n  private currLevel: Level;\n  private objId = -1;\n  private lastTime: number;\n\n  constructor({\n    canvas,\n    ctx,\n    levels,\n    state = {\n      /* \n    sceneType: SceneType.TITLE\n    */\n      sceneType: SceneType.LEVEL,\n      levelState: {\n        idx: 0,\n      },\n    },\n  }: GamePropsInterface) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.state = state;\n    this.levels = levels;\n  }\n\n  start() {\n    // create player\n    this.player = new Player(this.getDefaultProps());\n\n    // cache canvas rect\n    this.canvasRect = this.canvas.getBoundingClientRect();\n    this.startScene();\n\n    this.setListeners();\n\n    this.lastTime = Date.now();\n    requestAnimationFrame(this.gameLoop.bind(this));\n  }\n\n  startScene() {\n    // clear layers\n    this.layerCollection = new LayerCollection();\n\n    switch (this.state.sceneType) {\n      case SceneType.LEVEL:\n        this.startLevel();\n        break;\n    }\n  }\n\n  startLevel() {\n    const { idx } = this.state.levelState;\n\n    this.currLevel = new this.levels[idx]({\n      ...this.getDefaultProps(),\n      x: 0,\n      y: 0,\n      w: 0.65,\n      h: 0.65,\n    });\n\n    this.addObject(this.currLevel, 0);\n\n    this.currLevel.initPlayerSpots();\n    this.currLevel.setPlayer(this.player);\n    this.currLevel.startSpawning();\n  }\n\n  addObject(obj: BaseGameObject, layer: number = 0) {\n    if (obj.id === undefined) obj.id = this.getNewObjId();\n\n    obj.setRenderedState(true);\n    this.layerCollection.addObject(obj, layer);\n    obj.initPoints();\n    obj.setListeners();\n    obj.setLayer(layer);\n\n    for (let child of obj.children) {\n      this.addObject(child, layer);\n    }\n  }\n\n  removeObject(obj) {\n    this.layerCollection.removeObject(obj);\n    obj.removeListeners();\n\n    for (let child of obj.children) {\n      this.removeObject(child);\n    }\n  }\n\n  // listeners\n  handleMouse(e: MouseEvent) {\n    if (!this.currLevel) return;\n    this.currLevel.startUpdatingWithCursor(\n      e.clientX - this.canvasRect.x,\n      e.clientY - this.canvasRect.y\n    );\n  }\n\n  handleMouseLeave() {\n    if (!this.currLevel) return;\n    this.currLevel.stopUpdatingWithCursor();\n  }\n\n  setListeners() {\n    this.canvas.addEventListener(\"mouseenter\", this.handleMouse.bind(this));\n    this.canvas.addEventListener(\"mousemove\", this.handleMouse.bind(this));\n    this.canvas.addEventListener(\n      \"mouseleave\",\n      this.handleMouseLeave.bind(this)\n    );\n\n    const resizeHandler: VoidFunction = debounce(function () {\n      // recache canvas rect\n      this.canvasRect = this.canvas.getBoundingClientRect();\n    }, 200);\n    window.addEventListener(\"resize\", resizeHandler);\n  }\n\n  gameLoop(time) {\n    if (this.running) {\n      // skip first cycle to initialize lastTime\n      if (!this.lastTime) {\n        this.lastTime = time;\n      } else {\n        const timeDelta = time - this.lastTime;\n        this.lastTime = time;\n        this.draw(timeDelta, time);\n      }\n      requestAnimationFrame(this.gameLoop.bind(this));\n    }\n  }\n\n  draw(timeDelta: number, time: number) {\n    this.ctx.fillStyle = COLORS.BG;\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    this.layerCollection.applyFn((obj: BaseGameObject) => {\n      obj._update(timeDelta, time);\n      obj._render();\n    });\n  }\n\n  updateState(newState: State) {\n    let updateScene = newState.sceneType !== this.state.sceneType;\n    this.state = newState;\n\n    if (updateScene) {\n      this.startScene();\n    }\n  }\n\n  // util for getting default Game Object props\n  getDefaultProps(): GameObjectPropsInterface {\n    return {\n      game: this,\n      ctx: this.ctx,\n      id: this.getNewObjId(),\n    };\n  }\n\n  getNewObjId() {\n    if (this.objId < MAX_ID) {\n      this.objId += 1;\n    } else {\n      this.objId = 0;\n    }\n    return this.objId;\n  }\n}\n","export class Queue<T> {\n  first: QueueNode<T> = null;\n  last: QueueNode<T> = null;\n\n  constructor(initItems: T | T[]) {\n    if (initItems) {\n      this.enqueue(initItems);\n    }\n  }\n\n  enqueue(item: T | T[]): void {\n    if (!Array.isArray(item)) item = [item];\n\n    item.forEach((_item) => {\n      const newNode = new QueueNode<T>(_item);\n      if (!this.first) {\n        this.first = this.last = newNode;\n      } else {\n        this.last.next = newNode;\n        this.last = newNode;\n      }\n    });\n  }\n\n  dequeue(): T {\n    const dequeued = this.first;\n    if (this.first === this.last) {\n      this.first = this.last = null;\n    } else {\n      this.first = this.first.next;\n    }\n    return dequeued.item;\n  }\n\n  getFirst(): T {\n    return this.first && this.first.item;\n  }\n}\n\nclass QueueNode<T> {\n  item: T;\n  next: QueueNode<T>;\n\n  constructor(item) {\n    this.item = item;\n  }\n}\n","import { BaseGameObject } from \"./BaseGameObject\";\nimport { GameObjectInterface, GameObjectPropsInterface, Point } from \"../types\";\nimport { LEVEL_CENTER } from \"../CONSTS\";\nimport { Level } from \"./Level\";\nimport { findPointBetweenPoints } from \"../lib/utils\";\nimport { farDot } from \"../lib/shapes\";\n\nexport class Enemy extends BaseGameObject implements GameObjectInterface {\n  level: Level;\n  points: Point[];\n  to: Point;\n  from: Point;\n  color: string;\n\n  constructor(props: GameObjectPropsInterface) {\n    super(props);\n  }\n\n  updatePath(to: Point, from: Point) {\n    this.to = to;\n    this.from = from;\n  }\n\n  setLevel(level: Level) {\n    this.level = level;\n  }\n\n  calcFarPoint(): Point {\n    // range from 0.2 to 0.8\n    const distAwayFromLine = 0.8 - 0.6 * Math.min(1, this.transform.z - 1);\n    return {\n      x: LEVEL_CENTER.x + (this.to.x - LEVEL_CENTER.x) * distAwayFromLine,\n      y: LEVEL_CENTER.y + (this.to.y - LEVEL_CENTER.y) * distAwayFromLine,\n    };\n  }\n\n  render() {\n    this.ctx.strokeStyle = this.color;\n    this.ctx.beginPath();\n    // render far shape\n    if (this.transform.z > 1) {\n      const farPoints = farDot(this.calcFarPoint());\n      farPoints.forEach(({ x, y }, i) => {\n        i === 0 ? this.level.localMoveTo(x, y) : this.level.localLineTo(x, y);\n      });\n    } else {\n      this.points.forEach(({ x, y }, i) => {\n        i === 0 ? this.localMoveTo(x, y) : this.localLineTo(x, y);\n      });\n    }\n    this.ctx.closePath();\n    this.ctx.stroke();\n  }\n}\n","import { BaseGameObject } from \"./BaseGameObject\";\nimport { GameObjectInterface, GameObjectPropsInterface, Point } from \"../types\";\nimport { COLORS, BULLET_SPEED, RED_ENEMY_SPEED } from \"../CONSTS\";\nimport { Level } from \"./Level\";\nimport { Enemy } from \"./Enemy\";\nimport { findPointBetweenPoints } from \"../lib/utils\";\n\nexport class RedEnemy extends Enemy {\n  color: string = COLORS.RED;\n  speed: number = RED_ENEMY_SPEED;\n  level: Level;\n  points: Point[];\n  to: Point;\n  from: Point;\n\n  constructor(props: GameObjectPropsInterface) {\n    super(props);\n  }\n\n  initPoints() {\n    this.points = [\n      // left edge\n      { x: -0.5, y: -0.25 },\n      { x: -0.25, y: 0 },\n      { x: -0.5, y: 0.25 },\n      // right edge\n      { x: 0.5, y: -0.25 },\n      { x: 0.25, y: 0 },\n      { x: 0.5, y: 0.25 },\n    ];\n  }\n\n  update(timeDelta: number) {\n    const { z } = this.transform.getTransformProps();\n    // console.log(\"tf z\", this.transform.z);\n    // console.log(\"z\", z);\n    const newZ = z - timeDelta * this.speed;\n\n    if (newZ < 0) {\n      this.destroy();\n      return;\n    }\n\n    const newPoint = findPointBetweenPoints(this.from, this.to, newZ);\n    this.setTransformWithProps({ z: newZ, ...newPoint });\n  }\n}\n","import { sleep } from \"../lib/utils\";\nimport { GameObjectPropsInterface } from \"../types\";\nimport { BaseGameObject } from \"./BaseGameObject\";\nimport { Enemy } from \"./Enemy\";\nimport { Level } from \"./Level\";\nimport { RedEnemy } from \"./RedEnemy\";\n\ninterface EnemySpawnerPropsInterface extends GameObjectPropsInterface {\n  level: Level;\n  enemyClasses: typeof Enemy[];\n  startingZ?: number;\n  zIncrement?: number;\n}\n\nexport class EnemySpawner extends BaseGameObject {\n  static enemySizeMap: Map<typeof Enemy, number> = new Map<\n    typeof Enemy,\n    number\n  >([[RedEnemy, 0.65]]);\n  // z that nearest enemy will start with\n  startingZ: number = 1.1;\n  // z distance subsequent enemies start at\n  zIncrement: number = 0.1;\n\n  level: Level;\n  enemyClasses: typeof Enemy[];\n\n  constructor(props: EnemySpawnerPropsInterface) {\n    super(props);\n\n    const { startingZ, zIncrement } = props;\n    if (startingZ) this.startingZ = startingZ;\n    if (zIncrement) this.zIncrement = zIncrement;\n  }\n\n  spawnEnemies() {\n    this.enemyClasses.forEach((enemyClass, i) => {\n      const size = EnemySpawner.enemySizeMap.get(enemyClass);\n      const newEnemy = new enemyClass({\n        ...this.game.getDefaultProps(),\n        w: size,\n        h: size,\n        z: this.startingZ + this.zIncrement * i,\n      });\n      this.level.addEnemy(newEnemy);\n    });\n  }\n}\n","import {\n  GameObjectPropsInterface,\n  TransformPropsInterface,\n  Point,\n} from \"../types\";\nimport { BaseGameObject } from \"./BaseGameObject\";\nimport { Player } from \"./Player\";\nimport { calcAngle, calcMidpoints, throttle } from \"../lib/utils\";\nimport {\n  LEVEL_CENTER,\n  FAR_SCALE,\n  COLORS,\n  ENEMY_TO_LEVEL_SIZE,\n  COLLISION_TOLERANCE,\n  AVG_FRAME_TIME,\n  BULLET_SPEED,\n  BULLET_TOLERANCE,\n} from \"../CONSTS\";\nimport { Enemy } from \"./Enemy\";\nimport { Bullet } from \"./Bullet\";\nimport { Queue } from \"../lib/Queue\";\nimport { EnemySpawner } from \"./EnemySpawner\";\n\nexport interface LevelSpot extends TransformPropsInterface {}\n\nexport interface LevelPropsInterface extends GameObjectPropsInterface {\n  loops?: boolean;\n}\n\ninterface EnemyStateMap {\n  [id: string]: EnemyState;\n}\n\ninterface EnemyLaneMap {\n  [laneIdx: string]: Queue<Enemy>;\n}\n\ninterface BulletLaneMap {\n  [laneIdx: string]: Queue<Bullet>;\n}\n\ninterface EnemyState {\n  enemy: Enemy;\n  spotIdx: number;\n}\n\nexport class Level extends BaseGameObject {\n  playerSpots: LevelSpot[] = [];\n  bulletSpots: LevelSpot[] = [];\n  player: Player;\n  enemySpawner: EnemySpawner;\n  enemyClasses: typeof Enemy[] = [];\n  enemyStateMap: EnemyStateMap = {};\n  // maps lane indices to enemies in lane\n  enemyLaneMap: EnemyLaneMap = {};\n  // maps lane indices to bullets in lane\n  bulletLaneMap: BulletLaneMap = {};\n  playerSpotIdx: number = 0;\n  targetSpotIdx: number = 0;\n  updatingSpot: boolean = false;\n  loops: boolean = true;\n  throttledUpdateSpot: Function;\n  // Level-specific points\n  farPoints: Point[] = [];\n  midpoints: Point[] = [];\n  farMidpoints: Point[] = [];\n\n  constructor(props: LevelPropsInterface) {\n    super(props);\n    const { loops } = props;\n    if (loops !== undefined) this.loops = loops;\n    this.throttledUpdateSpot = throttle(this.updatePlayerSpot.bind(this), 50);\n  }\n\n  startSpawning() {\n    this.enemySpawner = new EnemySpawner({\n      ...this.game.getDefaultProps(),\n      level: this,\n      enemyClasses: this.enemyClasses,\n    });\n    this.enemySpawner.spawnEnemies();\n  }\n\n  setPlayer(player: Player) {\n    this.player = player;\n    player.updateTransformWithProps(this.playerSpots[this.playerSpotIdx]);\n    this.player.setLevel(this);\n    this.addChildren(player);\n  }\n\n  addEnemy(enemy: Enemy) {\n    if (this.enemyStateMap[enemy.id]) return;\n\n    const spotIdx = Math.floor(this.farMidpoints.length * Math.random());\n\n    // store references to enemy\n    this.enemyStateMap[enemy.id] = {\n      enemy,\n      spotIdx,\n    };\n    if (this.enemyLaneMap[spotIdx]) {\n      this.enemyLaneMap[spotIdx].enqueue(enemy);\n    } else {\n      this.enemyLaneMap[spotIdx] = new Queue<Enemy>(enemy);\n    }\n\n    this.addChildren(enemy);\n\n    const fromPoint = this.farMidpoints[spotIdx];\n    const toPoint = this.midpoints[spotIdx];\n    enemy.setTransformWithProps({\n      ...fromPoint,\n      w: ENEMY_TO_LEVEL_SIZE,\n      h: ENEMY_TO_LEVEL_SIZE,\n      angle: Math.PI / 2 - calcAngle(toPoint.x, toPoint.y),\n    });\n    enemy.updatePath(fromPoint, this.midpoints[spotIdx]);\n    enemy.setLevel(this);\n  }\n\n  // clear enemy references\n  removeEnemy(enemy: Enemy) {\n    const { spotIdx } = this.enemyStateMap[enemy.id];\n    delete this.enemyLaneMap[spotIdx][enemy.id];\n    delete this.enemyStateMap[enemy.id];\n    enemy.destroy();\n  }\n\n  addBullet(bullet: Bullet, laneIdx: number) {\n    if (this.bulletLaneMap[laneIdx]) {\n      this.bulletLaneMap[laneIdx].enqueue(bullet);\n    } else {\n      this.bulletLaneMap[laneIdx] = new Queue<Bullet>(bullet);\n    }\n  }\n\n  // TODO:\n  moveEnemy(enemy: Enemy, spotDiff: number) {}\n\n  // to be overwritten by Level classes\n  getLevelPoints(): Point[] {\n    return [];\n  }\n\n  // sets points\n  initPoints() {\n    this.points = this.getLevelPoints();\n    this.farPoints = this.points.map(({ x, y }) => {\n      const { x: bx, y: by } = LEVEL_CENTER;\n      return {\n        x: bx + x * FAR_SCALE,\n        y: by + y * FAR_SCALE,\n      };\n    });\n\n    // also calculate midpoints\n    this.midpoints = calcMidpoints(this.points, this.loops);\n    this.farMidpoints = calcMidpoints(this.farPoints, this.loops);\n  }\n\n  // sets player spots based on points\n  initPlayerSpots() {\n    this.playerSpots = [];\n  }\n\n  // get bullet path at player's position\n  getBulletPath(): { to: Point; from: Point } {\n    return {\n      to: this.midpoints[this.playerSpotIdx],\n      from: this.farMidpoints[this.playerSpotIdx],\n    };\n  }\n\n  getPlayerSpotIdx() {\n    return this.playerSpotIdx;\n  }\n\n  _render() {\n    this.renderLevelPoints(this.points);\n    this.renderLevelPoints(this.farPoints);\n\n    // render lines b/w near and far points\n    for (let i = 0; i < this.points.length; i++) {\n      const nearPt = this.points[i];\n      const farPt = this.farPoints[i];\n      const highlight =\n        this.playerSpotIdx === i ||\n        this.playerSpotIdx + 1 === i ||\n        // handle loop\n        (this.loops &&\n          this.playerSpotIdx === this.points.length - 1 &&\n          i === 0);\n      const color = highlight ? COLORS.PLAYER : COLORS.LINE;\n\n      this.ctx.strokeStyle = color;\n      this.ctx.beginPath();\n      this.localMoveTo(nearPt.x, nearPt.y);\n      this.localLineTo(farPt.x, farPt.y);\n      this.ctx.closePath();\n      this.ctx.stroke();\n    }\n  }\n\n  renderLevelPoints(points: Point[]) {\n    this.ctx.beginPath();\n    this.ctx.strokeStyle = COLORS.LINE;\n    points.forEach(({ x, y }, i) => {\n      i === 0 ? this.localMoveTo(x, y) : this.localLineTo(x, y);\n    });\n    this.loops && this.ctx.closePath();\n    this.ctx.stroke();\n  }\n\n  update() {\n    this.throttledUpdateSpot();\n\n    // check for collisions\n    this.checkCollisions();\n\n    // check for any bullets that need to be destroyed\n    this.cleanBullets();\n  }\n\n  checkCollisions() {\n    Object.keys(this.enemyLaneMap).forEach((laneIdx) => {\n      const enemyLaneQueue = this.enemyLaneMap[laneIdx];\n      const bulletLaneQueue = this.bulletLaneMap[laneIdx];\n\n      if (!bulletLaneQueue) return;\n\n      const firstEnemy = enemyLaneQueue.getFirst();\n      const firstBullet = bulletLaneQueue.getFirst();\n      const collides =\n        firstEnemy &&\n        firstBullet &&\n        firstBullet.transform.z < 1 &&\n        firstBullet.transform.z + BULLET_TOLERANCE >= firstEnemy.transform.z;\n\n      if (collides) {\n        bulletLaneQueue.dequeue();\n        enemyLaneQueue.dequeue();\n        this.removeEnemy(firstEnemy);\n        firstBullet.destroy();\n      }\n    });\n  }\n\n  cleanBullets() {\n    Object.keys(this.bulletLaneMap).forEach((laneIdx) => {\n      const q = this.bulletLaneMap[laneIdx];\n\n      while (q.getFirst() && q.getFirst().transform.z + BULLET_TOLERANCE > 1) {\n        const bullet = q.dequeue();\n        bullet.destroy();\n      }\n    });\n  }\n\n  // updates player position based on its spot index\n  updatePlayerSpot() {\n    if (\n      !this.updatingSpot ||\n      !this.player ||\n      this.playerSpotIdx === this.targetSpotIdx ||\n      // don't update if doesn't loop and have hit ends\n      (!this.loops &&\n        (this.targetSpotIdx < 0 ||\n          this.targetSpotIdx >= this.playerSpots.length))\n    )\n      return;\n\n    // look for fastest path if loops\n    const forwardTarget =\n      this.targetSpotIdx < this.playerSpotIdx\n        ? this.playerSpots.length + this.targetSpotIdx\n        : this.targetSpotIdx;\n    const forwardPath = forwardTarget - this.playerSpotIdx;\n\n    const backwardTarget =\n      this.targetSpotIdx > this.playerSpotIdx\n        ? this.targetSpotIdx - this.playerSpots.length\n        : this.targetSpotIdx;\n    const backwardPath = backwardTarget - this.playerSpotIdx;\n\n    // increment by 1 space in best direction\n    if (Math.abs(forwardPath) < Math.abs(backwardPath)) {\n      this.playerSpotIdx += 1;\n      if (this.playerSpotIdx >= this.playerSpots.length) this.playerSpotIdx = 0;\n    } else {\n      this.playerSpotIdx -= 1;\n      if (this.playerSpotIdx < 0)\n        this.playerSpotIdx = this.playerSpots.length - 1;\n    }\n\n    this.player.setTransformWithProps(this.playerSpots[this.playerSpotIdx]);\n  }\n\n  startUpdatingWithCursor(x: number, y: number) {\n    this.updatingSpot = true;\n  }\n\n  stopUpdatingWithCursor() {\n    this.updatingSpot = false;\n  }\n}\n","import { GameObjectInterface, Point } from \"../types\";\nimport { PLAYER_TO_LEVEL_DIST, PLAYER_TO_LEVEL_SIZE } from \"../CONSTS\";\nimport { Level, LevelSpot, LevelPropsInterface } from \"./Level\";\nimport { Enemy } from \"./Enemy\";\nimport { RedEnemy } from \"./RedEnemy\";\nimport { circle } from \"../lib/shapes\";\nimport { calcAngle } from \"../lib/utils\";\n\ninterface CirclePropsInterface extends LevelPropsInterface {\n  segments?: number;\n}\n\ninterface SegmentsMemo {\n  [key: string]: Point[];\n}\n\nexport class Circle extends Level implements GameObjectInterface {\n  props: CirclePropsInterface;\n  rotationSpeed: number = Math.PI / 2000; // per ms\n  segments: number = 16;\n  enemyClasses: typeof Enemy[] = new Array(10).fill(RedEnemy);\n  static pointsMemo: SegmentsMemo = {};\n\n  constructor(props: CirclePropsInterface) {\n    super(props);\n  }\n\n  getLevelPoints(): Point[] {\n    return circle(this.segments);\n  }\n\n  initPlayerSpots() {\n    const pts = this.points;\n    const spots: LevelSpot[] = [];\n    for (let i = 0; i < pts.length; i++) {\n      const j = i === pts.length - 1 ? 0 : i + 1;\n      const p_i = pts[i];\n      const p_j = pts[j];\n\n      // average b/w two points\n      const avg_x = (p_i.x + p_j.x) / 2;\n      const avg_y = (p_i.y + p_j.y) / 2;\n      const segAngle = (2 * Math.PI) / this.segments;\n      const normalAngle = segAngle * (0.5 + i);\n      const angle = Math.PI / 2 - normalAngle;\n\n      const x = avg_x + PLAYER_TO_LEVEL_DIST * Math.cos(normalAngle);\n      const y = avg_y + PLAYER_TO_LEVEL_DIST * Math.sin(normalAngle);\n\n      spots.push({\n        x,\n        y,\n        w: PLAYER_TO_LEVEL_SIZE,\n        h: PLAYER_TO_LEVEL_SIZE,\n        angle,\n      });\n    }\n    this.playerSpots = spots;\n  }\n\n  startUpdatingWithCursor(x: number, y: number) {\n    this.updatingSpot = true;\n    const normX = x / this.ctx.canvas.width - 0.5;\n    const normY = y / this.ctx.canvas.height - 0.5;\n\n    const angle = calcAngle(normX, normY);\n    const segmentAngle = (2 * Math.PI) / this.segments;\n    let idx = Math.floor(angle / segmentAngle);\n    if (idx < 0) idx += this.segments;\n    this.targetSpotIdx = idx;\n  }\n}\n","import { GameObjectInterface, Point } from \"../types\";\nimport { PLAYER_TO_LEVEL_DIST, PLAYER_TO_LEVEL_SIZE } from \"../CONSTS\";\nimport { Level, LevelSpot, LevelPropsInterface } from \"./Level\";\nimport { Enemy } from \"./Enemy\";\nimport { RedEnemy } from \"./RedEnemy\";\nimport { square } from \"../lib/shapes\";\nimport { calcAngle } from \"../lib/utils\";\n\ninterface SquarePropsInterface extends LevelPropsInterface {\n  segments?: number;\n}\n\ninterface SegmentsMemo {\n  [key: string]: Point[];\n}\n\nexport class Square extends Level implements GameObjectInterface {\n  props: SquarePropsInterface;\n  segments: number = 16;\n  enemyClasses: typeof Enemy[] = new Array(20).fill(RedEnemy);\n  static pointsMemo: SegmentsMemo = {};\n\n  constructor(props: SquarePropsInterface) {\n    super(props);\n  }\n\n  getLevelPoints(): Point[] {\n    return square(this.segments);\n  }\n\n  initPlayerSpots() {\n    const pts = this.points;\n    const spots: LevelSpot[] = [];\n    for (let i = 0; i < pts.length; i++) {\n      const j = i === pts.length - 1 ? 0 : i + 1;\n      const p_i = pts[i];\n      const p_j = pts[j];\n\n      // average b/w two points\n      let x = (p_i.x + p_j.x) / 2;\n      let y = (p_i.y + p_j.y) / 2;\n      let angle;\n\n      // choose angle based on side\n      switch (Math.floor((4 * i) / this.segments)) {\n        // from top-right to bottom-right\n        case 0:\n          x += PLAYER_TO_LEVEL_DIST;\n          angle = Math.PI / 2;\n          break;\n        // from bottom-right to bottom-left\n        case 1:\n          y += PLAYER_TO_LEVEL_DIST;\n          angle = 0;\n          break;\n        // from bottom-left to top-left\n        case 2:\n          x -= PLAYER_TO_LEVEL_DIST;\n          angle = -Math.PI / 2;\n          break;\n        // from top-left to top-right\n        case 3:\n          y -= PLAYER_TO_LEVEL_DIST;\n          angle = Math.PI;\n      }\n\n      spots.push({\n        x,\n        y,\n        w: PLAYER_TO_LEVEL_SIZE,\n        h: PLAYER_TO_LEVEL_SIZE,\n        angle,\n      });\n    }\n    this.playerSpots = spots;\n  }\n\n  startUpdatingWithCursor(x: number, y: number) {\n    this.updatingSpot = true;\n    const normX = x / this.ctx.canvas.width - 0.5;\n    const normY = y / this.ctx.canvas.height - 0.5;\n\n    // since spots start at top-right, shift angle by 45 deg CCW\n    const angle = calcAngle(normX, normY) + Math.PI / 4;\n    const segmentAngle = (2 * Math.PI) / this.segments;\n    let idx = Math.floor(angle / segmentAngle);\n    if (idx < 0) idx += this.segments;\n    this.targetSpotIdx = idx;\n  }\n}\n","import { Game } from \"./Game\";\nimport { Circle } from \"./objects/Circle\";\nimport { Square } from \"./objects/Square\";\n\nlet game: Game, canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D;\n\nfunction main() {\n  canvas = document.getElementById(\"game\") as HTMLCanvasElement;\n  ctx = canvas.getContext(\"2d\");\n\n  game = new Game({\n    canvas,\n    ctx,\n    levels: [Circle, Square],\n  });\n\n  game.start();\n}\nmain();\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}